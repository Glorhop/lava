#!/bin/sh
# postinst script for lava-server
#
# see: dh_installdeb(1)

set -e

# summary of how this script can be called:
#        * <postinst> `configure' <most-recently-configured-version>
#        * <old-postinst> `abort-upgrade' <new version>
#        * <conflictor's-postinst> `abort-remove' `in-favour' <package>
#          <new-version>
#        * <postinst> `abort-remove'
#        * <deconfigured's-postinst> `abort-deconfigure' `in-favour'
#          <failed-install-package> <version> `removing'
#          <conflicting-package> <version>
# for details, see http://www.debian.org/doc/debian-policy/ or
# the debian-policy package

LAVA_SYS_USER=lava
LAVA_SYS_HOME=/var/lib/lava-server/home/
LAVA_DB_INC=/etc/lava-server/db.inc

ucf -p $LAVA_DB_INC
if [ -f $LAVA_DB_INC ]; then
  rm $LAVA_DB_INC
fi

# Source debconf library.
. /usr/share/debconf/confmodule
# dbconfig doesn't have perl bindings, so we have to use shell.
. /usr/share/dbconfig-common/dpkg/postinst.pgsql
dbc_generate_include=sh:$LAVA_DB_INC
# minimal permissions
dbc_generate_include_owner="root:root"
dbc_generate_include_perms="600"
dbc_go lava-server $@

if [ -f /etc/lava-server/instance.conf ]; then
    . /etc/lava-server/instance.conf
else
    . /usr/share/lava-server/instance.template
fi
. $LAVA_DB_INC

# get the config version somehow
LAVA_DB_NAME="$dbc_dbname"
LAVA_DB_USER="$dbc_dbuser"
LAVA_DB_PORT="$dbc_dbport"
LAVA_DB_PASSWORD="$dbc_dbpass"

write_config() {
    cat <<INSTANCE_CONF
# Config version
LAVA_CONFIG_VERSION="$LAVA_CONFIG_VERSION"
# Installation prefix
LAVA_PREFIX="$LAVA_PREFIX"
# Instance name
LAVA_INSTANCE="$LAVA_INSTANCE"
# The lava-server branch used by upgrade
LAVA_MANIFEST_BRANCH="$LAVA_MANIFEST_BRANCH"
LAVA_BUILDOUT_CFG="$LAVA_BUILDOUT_CFG"
# System configuration (Unix-level)
LAVA_SYS_USER="$LAVA_SYS_USER"
LAVA_INSTANCE_OWNS_USER="$LAVA_INSTANCE_OWNS_USER"
# Apache configuration
LAVA_APACHE_VHOST="$LAVA_APACHE_VHOST"
LAVA_DEV_MODE="$LAVA_DEV_MODE"
# PostgreSQL configuration
LAVA_DB_NAME="$LAVA_DB_NAME"
LAVA_DB_USER="$LAVA_DB_USER"
LAVA_DB_PORT="$LAVA_DB_PORT"
LAVA_DB_PASSWORD="$LAVA_DB_PASSWORD"
# Scheduler configuration
LAVA_SCHEDULER_ENABLED="$LAVA_SCHEDULER_ENABLED"
LAVA_SERVER_IP="$LAVA_SERVER_IP"
LAVA_PROXY="$LAVA_PROXY"
INSTANCE_CONF
}

write_config >/etc/lava-server/instance.conf

case "$1" in
    configure)
     adduser --quiet --system --group --home $LAVA_SYS_HOME $LAVA_SYS_USER
     adduser --quiet $LAVA_SYS_USER fuse 
     # Allow instance to write to media directory
     chgrp -R $LAVA_SYS_USER /var/lib/lava-server/default/
     chmod -R g+rwXs /var/lib/lava-server/default/
     # Prevent anyone else from reading from the media directory
     chmod -R o-rX /var/lib/lava-server/default/
     # Allow instance to log stuff to log directory
     # Allow users in the adm group to read those logs
     chown -R $LAVA_SYS_USER:adm /var/log/lava-server/
     chmod -R g+rXs /var/log/lava-server/
    # Allow instance user to put stuff in temporary directory
    # Set the sticky and setgid bits there
#    sudo chgrp -R $LAVA_SYS_USER $LAVA_PREFIX/$LAVA_INSTANCE/tmp
#    sudo chmod -R g+rwtXs $LAVA_PREFIX/$LAVA_INSTANCE/tmp

#     Do we want to support LAVA_WORKER_STEPS or remote_fs?
#     mkdir $LAVA_SYS_HOME/.ssh/id_rsa
#     ssh-keygen -q -C "ssh key used by LAVA for sshfs" -f $LAVA_SYS_HOME/.ssh/id_rsa -t rsa -N ""
#     chown $LAVA_SYS_USER:$LAVA_SYS_USER /var/lib/lava-server/home/.ssh/
#     chown $LAVA_SYS_USER:$LAVA_SYS_USER /var/lib/lava-server/home/.ssh/*
    ;;

    abort-upgrade|abort-remove|abort-deconfigure)
    ;;

    *)
        echo "postinst called with unknown argument \`$1'" >&2
        exit 1
    ;;
esac

# dh_installdeb will replace this with shell code automatically
# generated by other debhelper scripts.

#DEBHELPER#

exit 0

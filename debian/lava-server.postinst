#!/bin/sh
# postinst script for lava-server
#
# see: dh_installdeb(1)

set -e

# summary of how this script can be called:
#        * <postinst> `configure' <most-recently-configured-version>
#        * <old-postinst> `abort-upgrade' <new version>
#        * <conflictor's-postinst> `abort-remove' `in-favour' <package>
#          <new-version>
#        * <postinst> `abort-remove'
#        * <deconfigured's-postinst> `abort-deconfigure' `in-favour'
#          <failed-install-package> <version> `removing'
#          <conflicting-package> <version>
# for details, see http://www.debian.org/doc/debian-policy/ or
# the debian-policy package

if [ -f /etc/lava-server/instance.conf ]; then
    . /etc/lava-server/instance.conf
else
    . /usr/share/lava-server/instance.template
fi

if [ "$LAVA_DB_NAME" = '$LAVA_DB_NAME' ]
then
  LAVA_DB_NAME="lavaserver"
fi
if [ "$LAVA_DB_USER" = '$LAVA_DB_USER' ]
then
  LAVA_DB_USER="lavaserver"
fi
if [ "$LAVA_DB_PORT" = '$LAVA_DB_PORT' ]
then
  LAVA_DB_PORT=5432
fi
if [ "$LAVA_DB_PASSWORD" = '$LAVA_DB_PASSWORD' ]
then
  LAVA_DB_PASSWORD=`env LANG=C LC_ALL=C tr -dc "[:alnum:]" < /dev/urandom | dd bs=1 count=12 2>/dev/null`
fi
LAVA_SYS_USER="$LAVA_DB_NAME"
LAVA_SYS_HOME=/var/lib/lava-server/home/
if [ "$LAVA_DB_PORT" = '' ]
then
  LAVA_DB_PORT=5432
fi
write_config() {
    cat <<INSTANCE_CONF
# Config version
LAVA_CONFIG_VERSION="$LAVA_CONFIG_VERSION"
# Installation prefix
LAVA_PREFIX="$LAVA_PREFIX"
# Instance name
LAVA_INSTANCE="$LAVA_INSTANCE"
# The lava-server branch used by upgrade
LAVA_MANIFEST_BRANCH="$LAVA_MANIFEST_BRANCH"
LAVA_BUILDOUT_CFG="$LAVA_BUILDOUT_CFG"
# System configuration (Unix-level)
LAVA_SYS_USER="$LAVA_SYS_USER"
LAVA_INSTANCE_OWNS_USER="$LAVA_INSTANCE_OWNS_USER"
# Apache configuration
LAVA_APACHE_VHOST="$LAVA_APACHE_VHOST"
LAVA_DEV_MODE="$LAVA_DEV_MODE"
# PostgreSQL configuration
LAVA_DB_NAME="$LAVA_DB_NAME"
LAVA_DB_USER="$LAVA_DB_USER"
LAVA_DB_SERVER="localhost"
LAVA_DB_PORT="$LAVA_DB_PORT"
LAVA_DB_PASSWORD="$LAVA_DB_PASSWORD"
# Scheduler configuration
LAVA_SCHEDULER_ENABLED="$LAVA_SCHEDULER_ENABLED"
LAVA_SERVER_IP="$LAVA_SERVER_IP"
LAVA_PROXY="$LAVA_PROXY"
INSTANCE_CONF
}

write_config >/etc/lava-server/instance.conf

die() {
    echo "$1"
    exit 1
}

install_database()
{
    # Create database user, if it doesn't exist
    if ! su postgres -c "psql \"-c SELECT usename FROM pg_user WHERE usename='$LAVA_DB_USER'\""; then
        su postgres -c "createuser --no-createdb --encrypted --login --no-superuser --no-createrole --no-password --port $LAVA_DB_PORT $LAVA_DB_USER"|| "Failed to create database user"
    fi

    # Set a password for our new user
    su postgres -c "psql --port $LAVA_DB_PORT --quiet --command=\"ALTER USER \"$LAVA_DB_USER\" WITH PASSWORD '$LAVA_DB_PASSWORD'\"" || die "Failed to set database password"

    # Create a database for our new user, if it doesn't exist
    if ! su postgres -c "psql -c \"SELECT datname FROM pg_database WHERE datname='$LAVA_DB_NAME'\"" | grep "$LAVA_DB_NAME"; then
        su postgres -c "createdb --port $LAVA_DB_PORT --locale=C.UTF-8 --encoding=UTF-8 --owner=$LAVA_DB_USER --template=template0 --no-password $LAVA_DB_NAME" || die "Failed to create a database"
    fi
}

case "$1" in
    configure)
     adduser --quiet --system --group --home $LAVA_SYS_HOME $LAVA_SYS_USER --shell /bin/sh
#     adduser --quiet $LAVA_SYS_USER fuse 
     # Allow instance to write to media directory
     chown -R $LAVA_SYS_USER:$LAVA_SYS_USER /var/lib/lava-server/default/
     chmod -R g+rwXs /var/lib/lava-server/default/
     # Prevent anyone else from reading from the media directory
     chmod -R o-rX /var/lib/lava-server/default/
     # Allow instance to log stuff to log directory
     # Allow users in the adm group to read those logs
     chown -R $LAVA_SYS_USER:adm /var/log/lava-server/
     chmod -R g+rXs /var/log/lava-server/
     # Allow lava user to write the secret key
     touch /etc/lava-server/secret_key.conf
     chown $LAVA_SYS_USER:$LAVA_SYS_USER /etc/lava-server/secret_key.conf
     install_database
     # superuser - password must be changed
     su $LAVA_SYS_USER -c "lava-server manage createsuperuser --noinput --username=$LAVA_SYS_USER --email=$LAVA_SYS_USER@lava.invalid" || true
     # syncdb
     su $LAVA_SYS_USER -c "lava-server manage syncdb --noinput"
     su $LAVA_SYS_USER -c "lava-server manage migrate --noinput"
    # Allow instance user to put stuff in temporary directory
    # Set the sticky and setgid bits there
#    chgrp -R $LAVA_SYS_USER $LAVA_PREFIX/$LAVA_INSTANCE/tmp
#    chmod -R g+rwtXs $LAVA_PREFIX/$LAVA_INSTANCE/tmp

    # allow reinstalls when the user has not been removed.
     if [ ! -d $LAVA_SYS_HOME/ ]; then
         mkdir -p $LAVA_SYS_HOME/
     else
         chown $LAVA_SYS_USER:$LAVA_SYS_USER $LAVA_SYS_HOME/
     fi

#     Do we want to support LAVA_WORKER_STEPS or remote_fs?
     if [ ! -d $LAVA_SYS_HOME/.ssh/ ]; then
         mkdir $LAVA_SYS_HOME/.ssh/
     fi
#     ssh-keygen -q -C "ssh key used by LAVA for sshfs" -f $LAVA_SYS_HOME/.ssh/id_rsa -t rsa -N ""
     chown $LAVA_SYS_USER:$LAVA_SYS_USER $LAVA_SYS_HOME/.ssh/
#     chown $LAVA_SYS_USER:$LAVA_SYS_USER /var/lib/lava-server/home/.ssh/*
    ;;

    abort-upgrade|abort-remove|abort-deconfigure)
    ;;

    *)
        echo "postinst called with unknown argument \`$1'" >&2
        exit 1
    ;;
esac

# dh_installdeb will replace this with shell code automatically
# generated by other debhelper scripts.

#DEBHELPER#

exit 0

lava-server for Debian
######################

 The default install provides an Apache2 config suitable for
 a LAVA server at http://localhost/ once enabled.

 The packaged versions of LAVA have migrated to django1.6
 but the deployment-tool installs have not. If you are
 building packages directly from LAVA upstream git, master
 or release branch, a snapshot version of python-django
 *must* be used.

 To install all of LAVA on a single machine, use:

 $ sudo apt-get install postgresql postgresql-9.1
 $ wget http://snapshot.debian.org/archive/debian/20130224T223605Z/pool/main/p/python-django/python-django_1.4.5-1_all.deb
 $ sudo dpkg -i python-django_1.4.5-1_all.deb
 $ sudo apt-get install lava
 $ sudo a2dissite 000-default
 $ sudo a2ensite lava-server.conf
 $ sudo service apache2 restart

 To install just the lava-server from the current packages
 patched to support django1.6, use:

 $ sudo apt-get install lava-server
 $ sudo a2dissite 000-default
 $ sudo a2ensite lava-server.conf
 $ sudo service apache2 restart

 This will install lava-dispatcher and lava-server but not
 linaro-media-create and other optional packages.

Master frontend or remote worker
================================

LAVA can be set up in one of two ways:

* a single instance with attached devices
* a master instance and remote dispatchers providing (more) devices

The configuration of a single instance is much simpler and is
recommended for users new to LAVA. Configuring a remote worker
configuration currently requires installing a full lava-server and
then disabling portions in configuration. This is an upstream bug and
there are plans to remove this stage. When complete, the remote worker
configuration step will become an error and lava-dispatcher will take
over the communication with the master instance of lava-server.

LAVA offers the choice of configuration during the install, with the
default of a single instance deployment.

If a remote worker configuration is chosen, details of the associated
master instance will be required during configuration of the worker. These
currently include parameters to allow remote write access to the postgresql
database by the worker as well as sshfs support. This support is due to
become redundant once the remote worker design is fixed.

Additionally, an SSH key needs to be generated on the remote worker
and installed as an authorized_key on the master instance. This is a
slight change from lava-deployment-tool but is a cleaner solution for
packaging. A helper for this stage is under consideration.

Superuser
=========

 A default lavaserver superuser is setup during package installation of
 a master instance, with a random password. The default superuser is
 a django user and is not the same as the lavaserver system user nor
 the postgres user (despite the name).

 $ sudo lava-server manage createsuperuser --username default --email=$DEBEMAIL

 This will prompt for name, email address and password.

 A superuser is only needed on the master instance.

 You can always delete this user later, but at least it gets
 you a default [sic] admin user with a password you know.

 To change the password of the dummy superuser, login as this new superuser
 at http://localhost/admin and select Users in the administrator interface.
 Selecting lavaserver brings up the details of the installation superuser
 and below the password field is a link to change the password without
 needing to know the random password.

 To delete the dummy superuser, login as this new superuser at
 http://localhost/admin and select Users in the administrator interface.
 Select lavaserver and click the Delete link at the bottom of the page.

Apache distribution support
===========================

 /etc/apache2/sites-available/lava-server.conf

Aimed at apache2.4 with comments for apache2.2 usage. Edit where necessary
and then enable and restart apache to use.

Remote workers will still need an apache configuration although the WSGI
support will not be used.

For help on using admin helpers to add known devices to your LAVA
instance, see packaging.html#adding-known-devices-using-the-lava-admin-helpers
in the lava-server-doc documentation which is also accessible via the
Documentation link on the site.

Note that if you want to use KVM devices on an i386 or amd64 master
instance or remote worker, either install the lava metapackage or add
qemu-system-x86. KVM support for ARM devices is an ongoing project
within Linaro.

Further information
===================

lava-server provides extensive documentation on using and configuring
LAVA. See the Documentation link on the master instance.

See also http://wiki.debian.org/LAVA

LAVA Components
^^^^^^^^^^^^^^^

=============== =========================================
lava            meta-package for single instance setup
lava-server     apache and WSGI settings and HTML content
lava-dispatcher dispatches jobs to devices
=============== =========================================

 Packages use a "default" instance but allow for other instances,
 although there are limitations:

 1. Only one instance can be running at any one time.
 2. Instance templates share a common folder: /usr/share/lava-server/templates

Daemon renaming
===============

 The main scheduler daemon is now explicitly named and only restarts
 the scheduler daemon::

 $ sudo service lava-server restart

 The web application itself is handled within apache, so to refresh
 the code running behind the front end, use::

 $ sudo apache2ctl restart

WSGI debugging help
===================

 https://code.google.com/p/modwsgi/wiki/DebuggingTechniques

 If you get a 502 bad gateway, the uwsgi is probably not setup.

Preseeding debconf
==================

debconf can be easily automated with a text file which contains the
answers for debconf questions - just keep the file up to date if the
questions change. For example, to preseed a worker install:

# cat preseed.txt
lava-server   lava-worker/db-port string 5432
lava-server   lava-worker/db-user string lava-server
lava-server   lava-server/master boolean false
lava-server   lava-worker/master-instance-name string default
lava-server   lava-worker/db-server string snagglepuss.codehelp
lava-server   lava-worker/db-pass string werewolves
lava-server   lava-worker/db-name string lava-server

# debconf-set-selections < preseed.txt

# debconf-show lava-server
* lava-worker/master-instance-name: default
* lava-server/master: false
* lava-worker/db-pass: werewolves
* lava-worker/db-port: 5432
* lava-worker/db-name: lava-server
* lava-worker/db-server: snagglepuss.codehelp
* lava-worker/db-user: lava-server

http://www.debian-administration.org/articles/394
http://www.fifi.org/doc/debconf-doc/tutorial.html

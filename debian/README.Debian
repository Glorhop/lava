lava-server for Debian
######################

 The default install provides an Apache2 config suitable for
 a LAVA server at http://localhost/ once enabled.

 Current versions of LAVA depend on django 1.4 and do not
 operate with django 1.5. Until this is fixed upstream, a
 snapshot version of python-django *must* be used.

 To install all of LAVA on a single machine, use:

 $ sudo apt-get install postgresql postgresql-9.1
 $ wget http://snapshot.debian.org/archive/debian/20130224T223605Z/pool/main/p/python-django/python-django_1.4.5-1_all.deb
 $ sudo dpkg -i python-django_1.4.5-1_all.deb
 $ sudo apt-get install lava
 $ sudo a2dissite 000-default
 $ sudo a2ensite lava-server.conf
 $ sudo service apache2 restart

Superuser
=========

 A default lavaserver superuser is setup during package installation with
 a random password. The default superuser is not the same as the lavaserver
 system user nor the postgres user (despite the name).

 $ sudo lava-server manage createsuperuser --username default --email=$DEBEMAIL

 This will prompt for name, email address and password.

 You can always delete this user later, but at least it gets
 you a default [sic] admin user with a password you know.

 To change the password of the dummy superuser, login as this new superuser
 at http://localhost/admin and select Users in the administrator interface.
 Selecting lavaserver brings up the details of the installation superuser
 and below the password field is a link to change the password without
 needing to know the random password.

 To delete the dummy superuser, login as this new superuser at 
 http://localhost/admin and select Users in the administrator interface.
 Select lavaserver and click the Delete link at the bottom of the page.

Initial data
============

The three stages for a new device are:

0: Create a configuration file for this type of device on the dispatcher
1: Create a configuration for the this instance of the new type on the dispatcher
2: Populate the database so that the scheduler can submit jobs.

The current packaging for LAVA does not support separate dispatchers and
schedulers, so all three steps need to happen on the same machine. If you
want to use the initial data so that this install gets a KVM device, use:

 $ sudo apt-get install qemu-system-x86
 $ sudo cp /usr/share/lava-server/starterkvm.conf /etc/lava-dispatcher/devices/
 $ sudo cp /usr/share/lava-server/kvm.conf /etc/lava-dispatcher/device-types/
 $ sudo lava-server manage loaddata /usr/share/lava-server/starterkvm.json

The example starterkvm.conf only supports NAT networking, so will not be
visible over TCP/IP to other devices when running tests.

Instance name
=============

 The packaging currently configures LAVA to use the instance name of
 default.

Further information
===================

See also http://wiki.debian.org/LAVA

LAVA Components
^^^^^^^^^^^^^^^

=============== =========================================
lava            meta-package for single instance setup
lava-server     apache and WSGI settings and HTML content
lava-dispatcher dispatches jobs to devices
=============== =========================================

 Packages use a "default" instance but allow for other instances,
 although there are limitations:

 1. Only one instance can be running at any one time.
 2. Instance templates share a common folder: /usr/share/lava-server/templates

WSGI debugging help
===================

 https://code.google.com/p/modwsgi/wiki/DebuggingTechniques

 If you get a 502 bad gateway, the uwsgi is probably not setup.

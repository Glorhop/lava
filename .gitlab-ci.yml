stages:
- tests
- analysis
- packaging

#######
# Tests
#######
.job: &job
  stage: tests
  image: hub.lavasoftware.org/lava/ci-images/$CI_JOB_NAME
  before_script:
  - PKG="lava-$(echo $CI_JOB_NAME | cut -d - -f 1)"
  - DISTRO=$(echo $CI_JOB_NAME | cut -d - -f 2)
  - SUITE=$(echo $CI_JOB_NAME | cut -d - -f 3)
  - '[ "$SUITE" = "9" ] && SUITE="stretch" || SUITE="buster"'
  - apt-get install --no-install-recommends --yes $(./share/requires.py -p $PKG -d $DISTRO -s $SUITE -n)
  - '[ "$SUITE" = "stretch" ] && apt-get install --no-install-recommends --yes -t stretch-backports $(./share/requires.py -p $PKG -d $DISTRO -s stretch-backports -n) || :'

.dispatcher: &dispatcher
  <<: *job
  script:
  - PYTHONPATH=. py.test-3 --cache-clear -v --junitxml=dispatcher.xml lava_dispatcher/test
  artifacts:
    reports:
      junit: dispatcher.xml

.server: &server
  <<: *job
  script:
  - PYTHONPATH=. py.test-3 --cache-clear -v --junitxml=common.xml lava_common/test
  - PYTHONPATH=. py.test-3 --cache-clear --ds lava_server.settings.development -v --junitxml=server.xml lava_scheduler_app/tests lava_results_app/tests linaro_django_xmlrpc/tests.py
  artifacts:
    reports:
      junit:
      - common.xml
      - server.xml

dispatcher-debian-9: *dispatcher
server-debian-9: *server
dispatcher-debian-10: *dispatcher
server-debian-10: *server

############
# Analysis #
############
codestyle:
  stage: analysis
  image: debian:9
  before_script:
  - apt-get update -qq
  - apt-get install --no-install-recommends -y pycodestyle
  script:
  - pycodestyle --ignore E501,E203,W503 .

coverage:
  stage: analysis
  image: hub.lavasoftware.org/lava/ci-images/server-debian-9
  coverage: '/^TOTAL.+ (\d+\.\d+)%$/'
  before_script:
  - apt-get install --no-install-recommends --yes $(./share/requires.py -p lava-dispatcher -d debian -s stretch -n)
  - apt-get install --no-install-recommends --yes $(./share/requires.py -p lava-dispatcher -d debian -s stretch-backports -n)
  - apt-get install --no-install-recommends --yes $(./share/requires.py -p lava-server -d debian -s stretch -n)
  - apt-get install --no-install-recommends --yes $(./share/requires.py -p lava-server -d debian -s stretch-backports -n)
  script:
  - PYTHONPATH=. py.test-3 --cache-clear -v --cov --cov-report= lava_dispatcher/test
  - PYTHONPATH=. py.test-3 --cache-clear -v --ds lava_server.settings.development --cov --cov-append --cov-report= lava_scheduler_app/tests lava_results_app/tests linaro_django_xmlrpc/tests.py
  - PYTHONPATH=. py.test-3 --cache-clear -v --cov --cov-append --cov-report=term --cov-report=html lava_common/test
  artifacts:
    paths:
    - htmlcov

sast:
  tags:
  - dind
  stage: analysis
  image: docker:stable
  variables:
    DOCKER_DRIVER: overlay2
  allow_failure: true
  services:
  - docker:stable-dind
  script:
  - export SP_VERSION=$(echo "$CI_SERVER_VERSION" | sed 's/^\([0-9]*\)\.\([0-9]*\).*/\1-\2-stable/')
  - docker run
      --env SAST_CONFIDENCE_LEVEL="${SAST_CONFIDENCE_LEVEL:-3}"
      --volume "$PWD:/code"
      --volume /var/run/docker.sock:/var/run/docker.sock
      "registry.gitlab.com/gitlab-org/security-products/sast:$SP_VERSION" /app/bin/run /code
  artifacts:
    paths: [gl-sast-report.json]

#########
# Build #
#########
doc:
  stage: packaging
  image: debian:9
  before_script:
  - apt-get update -qq
  - apt-get install --no-install-recommends -y git make python3 python3-sphinx python3-sphinx-bootstrap-theme
  script:
  - make -C doc/v2 html
  artifacts:
    paths:
    - doc/v2/_build/html

debian-pkg:
  stage: packaging
  image: hub.lavasoftware.org/lava/ci-images/debian-9-packaging
  script:
  - ./share/debian-dev-build.sh -p lava -a amd64 -b master -o build
